#!/bin/bash

function usage {
	echo "create [app|model|component|session|library] [classname]"
}

if [ $# -ne 2 ]; then 
   	usage
	exit 1
fi

typ=$1
name=$2

function fileInCode {
	name=$1
	typ=$2
	echo "
ObjectMemory snapshot: 'seaside.im'" >> "../${typ}/$name.st"
}

function library {
	name=$1
	echo "
Seaside.WAFileLibrary subclass: $name [
	
	selectorsToInclude [
		^ Array new
	]
]

$name addAllFilesIn: '`pwd`/../static/'.
" > "../support/$name.st"
	root=`grep RootComponent ../config/config | sed 's/RootComponent: //'`
	saveLine=`grep "registerAsApplication" ../components/${root}.st`
	newLine="application preferenceAt: #libraries put: (Array with: $name with: Seaside.WAStandardFiles)."
	eval "sed -i 's/$saveLine/$saveLine\n\t\t$newLine/' ../components/${root}.st"
}

function component {
	name=$1
	echo "
Seaside.WAComponent subclass: $name [
	$name class >> canBeRoot [ ^ true ]
	
	initialize [ super initialize ]

	renderContentOn: html [
	]
]" > "../components/$name.st"
}

function app {
	name=$1
	echo "
Seaside.WAComponent subclass: $name [
	$name class >> canBeRoot [ ^ true ]
	
	$name class>>initialize [
        	| application |
		super initialize.
        	application := self registerAsApplication: self name asString.
	]

	initialize [ super initialize ]

	renderContentOn: html [
	]
]

$name initialize.
" > "../components/${name}.st"
echo "RootComponent: $name" >> ../config/config
}

function session {
	name=$1
	echo "
Seaside.WASession subclass: $name [
	initialize [ super initialize ]
]" > "../support/$name.st"
	root=`grep RootComponent ../config/config | sed 's/RootComponent: //'`
	saveLine=`grep "registerAsApplication" ../components/${root}.st`
	newLine="application preferenceAt: #sessionClass put: $name."
	eval "sed -i 's/$saveLine/$saveLine\n\t\t$newLine/' ../components/${root}.st"
}

function model {
	name=$1
	echo "
Object subclass: $name [
	initialize [ super initialize ]
]" > "../models/$name.st"
}

cd `echo $0 | sed 's#/[A-Za-z0-9]*$##'`
case "$typ" in
   "component")
   	component $name
	typ="components"
	;;
   "model")
   	model $name
	typ="models"
	;;
   "app")
	app $name
	typ="components"
	;;
   "session")
	session $name
	typ="support"
	;;
   "library")
	library $name
	typ="support"
	;;
   *)
   	usage
	exit 1
   	;;
esac
fileInCode $name $typ

